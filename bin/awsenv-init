#!/usr/bin/env bash

set -e
[ -n "$AWSENV_DEBUG" ] && set -x

if [ $# -eq 0 ]; then
    awsenv version
    echo "usage: awsenv init <environment>"
    echo ""
    echo "error: no argument given." >&2
    echo "hint:  use '-' to load the environment selected with 'awsenv use'."
    exit 1
fi

if [ "$1" == "-" ]; then
    DEFAULT="$(awsenv default)"

    if [ "$DEFAULT" == "" ]; then
        echo "# $(awsenv version)"
        echo "# error: you have to set a environment with 'awsenv use' first."
        exit 1
    fi
else
    DEFAULT="$1"
fi

AWSENV_ROOT="$(awsenv root)"
ENVIRONMENT="$AWSENV_ROOT/envs/$DEFAULT"

if [ ! -d "$ENVIRONMENT" ]; then
    echo "# $(awsenv version)"
    echo "# error: there is no environment named '$DEFAULT'." >&2
    exit 1
fi

function globSingleFile()
{
    local start=$1
    local end=$2
    local result="$(echo "$start"*"$end")"

    # The result can contain multiple results and that should lead to an error.
    # How do we achieve this? Just check for single spaces in the result! But
    # first we strip all escaped spaces, cause they are allowed and would lead
    # to false positives.
    local shouldNotBeEmpty="$(echo "$result" | sed 's/\\ //' | grep -v " ")"

    if [ "$shouldNotBeEmpty" == "" ]; then
        echo "# error: multiple files detected for '$start*$end'." >&2
        result="$(echo "$result" | sed -r 's/([^\]) .*/\1/g')"
    fi

    echo "$result"
}

function exportAwsEnvGlobals()
{
    echo ""
    echo "# Let others detect us"
    echo "export AWSENV_LOADED=1"
    echo "export AWSENV_NAME='$DEFAULT'"
}

function exportNewPath()
{
    echo ""
    echo "# Append the combined bin-path to the users PATH"
    echo "export PATH=\"$AWSENV_ROOT/amazon/bin:\$PATH\""
}

function exportAwsHomeDirectories()
{
    echo ""
    echo "# Home directories for all CLI tools"
    echo "export AWS_AUTO_SCALING_HOME='$(globSingleFile "$AWSENV_ROOT/amazon/AutoScaling-")'"
    echo "export AWS_CLOUDFORMATION_HOME='$(globSingleFile "$AWSENV_ROOT/amazon/AWSCloudFormation-")'"
    echo "export AWS_CLOUDWATCH_HOME='$(globSingleFile "$AWSENV_ROOT/amazon/CloudWatch-")'"
    echo "export AWS_ELASTICACHE_HOME='$(globSingleFile "$AWSENV_ROOT/amazon/AmazonElastiCacheCli-")'"
    echo "export AWS_ELB_HOME='$(globSingleFile "$AWSENV_ROOT/amazon/ElasticLoadBalancing-")'"
    echo "export AWS_IAM_HOME='$(globSingleFile "$AWSENV_ROOT/amazon/IAMCli-")'"
    echo "export AWS_RDS_HOME='$(globSingleFile "$AWSENV_ROOT/amazon/RDSCli-")'"
    echo "export AWS_SNS_HOME='$(globSingleFile "$AWSENV_ROOT/amazon/SimpleNotificationServiceCli-")'"
    echo "export EC2_AMITOOL_HOME='$(globSingleFile "$AWSENV_ROOT/amazon/ec2-ami-tools-")'"
    echo "export EC2_HOME='$(globSingleFile "$AWSENV_ROOT/amazon/ec2-api-tools-")'"
}

function exportAwsCredentials()
{
    echo ""
    echo "# Path to the credentials / keys"

    local EC2_CERT="$(globSingleFile "$ENVIRONMENT/cert-")"
    local EC2_PRIVATE_KEY="$(globSingleFile "$ENVIRONMENT/pk-")"
    local AWS_CREDENTIAL_FILE="$(globSingleFile "$ENVIRONMENT/credentials")"
    local EC2_ACCESS_KEY="$(grep "AWSAccessKeyId" "$AWS_CREDENTIAL_FILE" | cut -d"=" -f2)"
    local EC2_SECRET_KEY="$(grep "AWSSecretKey"   "$AWS_CREDENTIAL_FILE" | cut -d"=" -f2)"

    echo "export AWS_CREDENTIAL_FILE='$AWS_CREDENTIAL_FILE'"
    echo "export EC2_CERT='$EC2_CERT'"
    echo "export EC2_PRIVATE_KEY='$EC2_PRIVATE_KEY'"
    echo ""
    echo "# EC2 still needs the keys as separate variables"
    echo "export EC2_ACCESS_KEY='$EC2_ACCESS_KEY'"
    echo "export EC2_SECRET_KEY='$EC2_SECRET_KEY'"
}

function exportAwsIdentityFile()
{
    echo ""
    echo "# Default ssh key"

    local AWS_IDENTITY_FILE="$(globSingleFile "$ENVIRONMENT/" "-keypair")"
    echo "export AWS_IDENTITY_FILE='$AWS_IDENTITY_FILE'"
    echo "export AWS_SSH_KEY_ID='$(basename "$AWS_IDENTITY_FILE")'"

    if [ -f "$AWS_IDENTITY_FILE" ] \
    && [ -x "$(command -v ssh-add || true)" ]; then
        echo "# ... also added to your ssh agent"
        chmod 600 "$AWS_IDENTITY_FILE"
        ssh-add "$AWS_IDENTITY_FILE" &> /dev/null
    fi
}

function exportJavaHome()
{
    local OSX_JAVA_HOME="/System/Library/Frameworks/JavaVM.framework/Home/"
    local UBUNTU_JAVA_HOME="/usr/lib/jvm/java-6-openjdk/"

    echo ""
    echo "# Try to ensure a valid JAVA_HOME"
    if [ "$JAVA_HOME" != "" ]; then
        echo "# ... already set and we obey"
    elif [ -d "$OSX_JAVA_HOME" ]; then
        echo "export JAVA_HOME='$OSX_JAVA_HOME'"
    elif [ -d "$UBUNTU_JAVA_HOME" ]; then
        echo "export JAVA_HOME='$UBUNTU_JAVA_HOME'"
    else
        echo "error: unable to detect JAVA_HOME" >&2
        exit 1
    fi
}

# Be sure that the amazon/bin folder is filled properly and up to date
awsenv rehash

# And now export everything
exportAwsEnvGlobals
exportNewPath
exportAwsHomeDirectories
exportAwsCredentials
exportAwsIdentityFile
exportJavaHome
